- migration is used to alter over database schema over time
- migration file
class CreateUsers < ActiveRecord::Migration[7.0]
	def change
		create_table :users do |t|
			t.string :name
			t.integer :age
			t.timestamps
		end
	end
end

#generate migration
#add_column
- rails g migration AddPartNumberToUsers part_number:integer:index
def change
	add_column :products, :part_number, :integer
	add_index :products, :part_number
end

#remove column
- rails g migration RemovePartNumberFromUsers part_number:string
remove_column :users, :part_number, :string

#add_references
- rails g migration AddUserRefToProducts user:references 
add_reference :products, :user, foreign_key: true
add_foreign_key :products, :users
remove_foreign_key :products, :users - remove by table name
remove_foreign_key :products, column: :user_id - remove by foreign key name

#for join table
- rails g migration CreateJoinTableUserProduct
def change
	create_join_table :users :products do |t|
		t.index [:user_id, :product_id]
	end
end

#change table - irversable method
change_table :products do |t|
	t.remove :description. :name
	t.rename :upccode, :upc_code
	t.string :new
	t.index	 :new
end
change column :products, :part_number, :string


bydefault it has change method but we can use up and down method for the same

rails g migration AddNameToArticles name - add new column using miration

rails db:migrate:status 	- to check all the migartion status
rails db:rollback 		- revert last change
bin/rails db:rollback STEP=3 	- revert last 3 changes
bin/rails db:rollback VERSION=0	- to rollback all the migration
bin/rails db:migrate VERSION=20080906120000 	- to run all migratation upto specific version
bin/rails db:migrate:up VERSION=20080906120000 	- to run specific migration up.
bin/rails db:migrate:down VERSION=20080906120000 	- to run specific migration down.
bin/rails db:migrate RAILS_ENV=test 	- to run migration in different environment (test,devlopment)
bin/rails db:migrate:redo 		- You can rollback and then migrate again using the redo command.This is basically a shortcut that combines rollback and migrate tasks.

bin/rails db:schema:load 	- to load schema file
bin/rails db:setup  		- setup databse(create databse and load schema)
bin/rails db:reset  		- equal to - bin/rails db:drop db:setup -drop databse and set it again
 
Polymorphic Associations 		- one model belong to more than one model
A Polymorphic relationship is where a model can belong to more than one model on a single association.
